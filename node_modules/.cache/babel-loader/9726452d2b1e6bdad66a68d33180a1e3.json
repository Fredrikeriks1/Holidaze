{"ast":null,"code":"var _jsxFileName = \"/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/admin/Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { BASE_URL, headers } from \"../../constants/api\";\nimport { Helmet } from \"react-helmet\";\nimport Spinner from \"../spinner/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Messages() {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [contacts, setContacts] = useState(null);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + \"contacts/\";\n  useEffect(() => {\n    const options = {\n      headers\n    };\n    fetch(url, options).then(response => response.json()).then(json => {\n      console.dir(json);\n\n      if (json.error) {\n        setContacts([]);\n        setError(json.message);\n      } else {\n        setContacts(json);\n      }\n    }).catch(error => console.debug(error)).finally(() => setLoading(false));\n  }, [url]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Messages | Holidaze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), contacts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty\",\n      children: \"no messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }, this), contacts.map(contact => {\n      const format = {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      };\n      const newFormat = new Intl.DateTimeFormat(\"en-GB\", format);\n      const createdAt = new Date(contact.createdAt);\n      const newCreatedAt = newFormat.format(createdAt);\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `viewmessage/${contact.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: contact.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: newCreatedAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, contact.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"WFRSO7mzyT3KhfHoDGhKohymzSg=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/admin/Messages.js"],"names":["React","useState","useEffect","NavLink","BASE_URL","headers","Helmet","Spinner","Messages","loading","setLoading","contacts","setContacts","error","setError","url","options","fetch","then","response","json","console","dir","message","catch","debug","finally","length","map","contact","format","year","month","day","newFormat","Intl","DateTimeFormat","createdAt","Date","newCreatedAt","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { BASE_URL, headers } from \"../../constants/api\";\nimport { Helmet } from \"react-helmet\";\nimport Spinner from \"../spinner/Spinner\";\n\nfunction Messages() {\n  const [loading, setLoading] = useState(true);\n  const [contacts, setContacts] = useState(null);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + \"contacts/\";\n\n  useEffect(() => {\n    const options = { headers };\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((json) => {\n        console.dir(json);\n        if (json.error) {\n          setContacts([]);\n          setError(json.message);\n        } else {\n          setContacts(json);\n        }\n      })\n      .catch((error) => console.debug(error))\n      .finally(() => setLoading(false));\n  }, [url]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"messages\">\n      <Helmet>\n        <title>Messages | Holidaze</title>\n      </Helmet>\n      {error && <div className=\"error\">{error}</div>}\n      {contacts.length === 0 && <p className=\"empty\">no messages</p>}\n      {contacts.map((contact) => {\n        const format = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n        const newFormat = new Intl.DateTimeFormat(\"en-GB\", format);\n        const createdAt = new Date(contact.createdAt);\n        const newCreatedAt = newFormat.format(createdAt);\n        return (\n          <NavLink to={`viewmessage/${contact.id}`}>\n            <div key={contact.id}>\n              <h5>{contact.name}</h5>\n              <p>{contact.message}</p>\n              <p>{newCreatedAt}</p>\n            </div>\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}