{"ast":null,"code":"var _jsxFileName = \"/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/layout/Newsletter.js\";\nimport React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nconst schema = yup.object().shape({\n  email: yup.string().email(\"E-mail is not valid\", {\n    regex: /^[\\d-_.a-zA-z]+@[\\d-_.a-zA-z]+\\.[a-zA-z]+$/g\n  }).required(\"E-mail is required\")\n});\n\nfunction NewsLetter() {\n  var _errors$email;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  function onSubmit(data) {\n    console.dir(\"data\", data);\n    alert(\"Thank you for signing up for our newsletter\");\n  }\n\n  return /*#__PURE__*/React.createElement(Popup, {\n    trigger: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      title: \"Click to sign up for our newsletter\",\n      className: \"btn-blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n      title: \"Click to sign up for our newsletter\",\n      className: \"btn-contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-newspaper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pop-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"h3\", {\n    title: \"Submit your e-mail adress to register for our newsletter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Submit your e-mail adress to register for our newsletter\"), /*#__PURE__*/React.createElement(\"input\", {\n    title: \"E-mail\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"example@domain.com\",\n    ref: register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-blue\",\n    title: \"Submit form\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Send\"))));\n}\n\nexport default NewsLetter;","map":{"version":3,"sources":["/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/layout/Newsletter.js"],"names":["React","Popup","useForm","yupResolver","yup","schema","object","shape","email","string","regex","required","NewsLetter","register","handleSubmit","errors","resolver","onSubmit","data","console","dir","alert","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,KAAK,EAAEJ,GAAG,CACPK,MADI,GAEJD,KAFI,CAEE,qBAFF,EAEyB;AAC5BE,IAAAA,KAAK,EAAE;AADqB,GAFzB,EAKJC,QALI,CAKK,oBALL;AADyB,CAAnB,CAAf;;AASA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCb,OAAO,CAAC;AACjDc,IAAAA,QAAQ,EAAEb,WAAW,CAACE,MAAD;AAD4B,GAAD,CAAlD;;AAGA,WAASY,QAAT,CAAkBC,IAAlB,EAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACAG,IAAAA,KAAK,CAAC,6CAAD,CAAL;AACD;;AACD,sBACE,oBAAC,KAAD;AACE,IAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAC,qCADR;AAEE,MAAA,SAAS,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAOE;AACE,MAAA,KAAK,EAAC,qCADR;AAEE,MAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAPF,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAkBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEP,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAI,IAAA,KAAK,EAAC,0DAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFF,eAKE;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,GAAG,EAAEJ,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAYE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsBE,MAAM,CAACP,KAA7B,kDAAsB,cAAcc,OAApC,CAZF,eAaE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,KAAK,EAAC,aAAnC;AAAiD,IAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CADF,CAlBF,CADF;AAwCD;;AAED,eAAeV,UAAf","sourcesContent":["import React from \"react\";\nimport Popup from \"reactjs-popup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"E-mail is not valid\", {\n      regex: /^[\\d-_.a-zA-z]+@[\\d-_.a-zA-z]+\\.[a-zA-z]+$/g,\n    })\n    .required(\"E-mail is required\"),\n});\n\nfunction NewsLetter() {\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(schema),\n  });\n  function onSubmit(data) {\n    console.dir(\"data\", data);\n    alert(\"Thank you for signing up for our newsletter\");\n  }\n  return (\n    <Popup\n      trigger={\n        <div>\n          <button\n            title=\"Click to sign up for our newsletter\"\n            className=\"btn-blue\"\n          >\n            Sign Up\n          </button>\n          <button\n            title=\"Click to sign up for our newsletter\"\n            className=\"btn-contact\"\n          >\n            <i className=\"fas fa-newspaper\"></i>\n          </button>\n        </div>\n      }\n    >\n      <div className=\"pop-up\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <h2>Sign Up</h2>\n          <h3 title=\"Submit your e-mail adress to register for our newsletter\">\n            Submit your e-mail adress to register for our newsletter\n          </h3>\n          <input\n            title=\"E-mail\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"example@domain.com\"\n            ref={register}\n          />\n          <p className=\"error\">{errors.email?.message}</p>\n          <button className=\"btn-blue\" title=\"Submit form\" type=\"submit\">\n            Send\n          </button>\n        </form>\n      </div>\n    </Popup>\n  );\n}\n\nexport default NewsLetter;\n"]},"metadata":{},"sourceType":"module"}