{"ast":null,"code":"import _slicedToArray from\"/Users/fredrikeriksen/Documents/FEU/PE2/my-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{NavLink}from\"react-router-dom\";import{BASE_URL,headers}from\"../../constants/api\";import{Helmet}from\"react-helmet\";import Spinner from\"../spinner/Spinner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Messages(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),contacts=_useState4[0],setContacts=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var url=BASE_URL+\"contacts/\";useEffect(function(){var options={headers:headers};fetch(url,options).then(function(response){return response.json();}).then(function(json){console.dir(json);if(json.error){setContacts([]);setError(json.message);}else{setContacts(json);}}).catch(function(error){return console.debug(error);}).finally(function(){return setLoading(false);});},[url]);if(loading){return/*#__PURE__*/_jsx(Spinner,{});}return/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Messages | Holidaze\"})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:error}),contacts.length===0&&/*#__PURE__*/_jsx(\"p\",{className:\"empty\",children:\"no messages\"}),contacts.map(function(contact){var format={year:\"numeric\",month:\"short\",day:\"numeric\"};var newFormat=new Intl.DateTimeFormat(\"en-GB\",format);var createdAt=new Date(contact.createdAt);var newCreatedAt=newFormat.format(createdAt);return/*#__PURE__*/_jsx(NavLink,{to:\"viewmessage/\".concat(contact.id),children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:contact.name}),/*#__PURE__*/_jsx(\"p\",{children:contact.message}),/*#__PURE__*/_jsx(\"p\",{children:newCreatedAt})]},contact.id)});})]});}export default Messages;","map":{"version":3,"sources":["/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/admin/Messages.js"],"names":["React","useState","useEffect","NavLink","BASE_URL","headers","Helmet","Spinner","Messages","loading","setLoading","contacts","setContacts","error","setError","url","options","fetch","then","response","json","console","dir","message","catch","debug","finally","length","map","contact","format","year","month","day","newFormat","Intl","DateTimeFormat","createdAt","Date","newCreatedAt","id","name"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,OAASC,QAAT,CAAmBC,OAAnB,KAAkC,qBAAlC,CACA,OAASC,MAAT,KAAuB,cAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,C,wFAEA,QAASC,CAAAA,QAAT,EAAoB,CAClB,cAA8BP,QAAQ,CAAC,IAAD,CAAtC,wCAAOQ,OAAP,eAAgBC,UAAhB,eACA,eAAgCT,QAAQ,CAAC,IAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAA0BX,QAAQ,CAAC,IAAD,CAAlC,yCAAOY,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,GAAG,CAAGX,QAAQ,CAAG,WAAvB,CAEAF,SAAS,CAAC,UAAM,CACd,GAAMc,CAAAA,OAAO,CAAG,CAAEX,OAAO,CAAPA,OAAF,CAAhB,CACAY,KAAK,CAACF,GAAD,CAAMC,OAAN,CAAL,CACGE,IADH,CACQ,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,IAAT,EAAd,EADR,EAEGF,IAFH,CAEQ,SAACE,IAAD,CAAU,CACdC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EACA,GAAIA,IAAI,CAACP,KAAT,CAAgB,CACdD,WAAW,CAAC,EAAD,CAAX,CACAE,QAAQ,CAACM,IAAI,CAACG,OAAN,CAAR,CACD,CAHD,IAGO,CACLX,WAAW,CAACQ,IAAD,CAAX,CACD,CACF,CAVH,EAWGI,KAXH,CAWS,SAACX,KAAD,QAAWQ,CAAAA,OAAO,CAACI,KAAR,CAAcZ,KAAd,CAAX,EAXT,EAYGa,OAZH,CAYW,iBAAMhB,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAZX,EAaD,CAfQ,CAeN,CAACK,GAAD,CAfM,CAAT,CAiBA,GAAIN,OAAJ,CAAa,CACX,mBAAO,KAAC,OAAD,IAAP,CACD,CAED,mBACE,aAAK,SAAS,CAAC,UAAf,wBACE,KAAC,MAAD,wBACE,8CADF,EADF,CAIGI,KAAK,eAAI,YAAK,SAAS,CAAC,OAAf,UAAwBA,KAAxB,EAJZ,CAKGF,QAAQ,CAACgB,MAAT,GAAoB,CAApB,eAAyB,UAAG,SAAS,CAAC,OAAb,yBAL5B,CAMGhB,QAAQ,CAACiB,GAAT,CAAa,SAACC,OAAD,CAAa,CACzB,GAAMC,CAAAA,MAAM,CAAG,CAAEC,IAAI,CAAE,SAAR,CAAmBC,KAAK,CAAE,OAA1B,CAAmCC,GAAG,CAAE,SAAxC,CAAf,CACA,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAI,CAACC,cAAT,CAAwB,OAAxB,CAAiCN,MAAjC,CAAlB,CACA,GAAMO,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAJ,CAAST,OAAO,CAACQ,SAAjB,CAAlB,CACA,GAAME,CAAAA,YAAY,CAAGL,SAAS,CAACJ,MAAV,CAAiBO,SAAjB,CAArB,CACA,mBACE,KAAC,OAAD,EAAS,EAAE,uBAAiBR,OAAO,CAACW,EAAzB,CAAX,uBACE,oCACE,oBAAKX,OAAO,CAACY,IAAb,EADF,cAEE,mBAAIZ,OAAO,CAACN,OAAZ,EAFF,cAGE,mBAAIgB,YAAJ,EAHF,GAAUV,OAAO,CAACW,EAAlB,CADF,EADF,CASD,CAdA,CANH,GADF,CAwBD,CAED,cAAehC,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { BASE_URL, headers } from \"../../constants/api\";\nimport { Helmet } from \"react-helmet\";\nimport Spinner from \"../spinner/Spinner\";\n\nfunction Messages() {\n  const [loading, setLoading] = useState(true);\n  const [contacts, setContacts] = useState(null);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + \"contacts/\";\n\n  useEffect(() => {\n    const options = { headers };\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((json) => {\n        console.dir(json);\n        if (json.error) {\n          setContacts([]);\n          setError(json.message);\n        } else {\n          setContacts(json);\n        }\n      })\n      .catch((error) => console.debug(error))\n      .finally(() => setLoading(false));\n  }, [url]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"messages\">\n      <Helmet>\n        <title>Messages | Holidaze</title>\n      </Helmet>\n      {error && <div className=\"error\">{error}</div>}\n      {contacts.length === 0 && <p className=\"empty\">no messages</p>}\n      {contacts.map((contact) => {\n        const format = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n        const newFormat = new Intl.DateTimeFormat(\"en-GB\", format);\n        const createdAt = new Date(contact.createdAt);\n        const newCreatedAt = newFormat.format(createdAt);\n        return (\n          <NavLink to={`viewmessage/${contact.id}`}>\n            <div key={contact.id}>\n              <h5>{contact.name}</h5>\n              <p>{contact.message}</p>\n              <p>{newCreatedAt}</p>\n            </div>\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}