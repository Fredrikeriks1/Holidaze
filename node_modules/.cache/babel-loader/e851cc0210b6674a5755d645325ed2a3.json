{"ast":null,"code":"var _jsxFileName = \"/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/admin/Messages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { BASE_URL, headers } from \"../../constants/api\";\nimport { Helmet } from \"react-helmet\";\nimport Spinner from \"../spinner/Spinner\";\n\nfunction Messages() {\n  const [loading, setLoading] = useState(true);\n  const [contacts, setContacts] = useState(null);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + \"contacts/\";\n  useEffect(() => {\n    const options = {\n      headers\n    };\n    fetch(url, options).then(response => response.json()).then(json => {\n      console.dir(json);\n\n      if (json.error) {\n        setContacts([]);\n        setError(json.message);\n      } else {\n        setContacts(json);\n      }\n    }).catch(error => console.debug(error)).finally(() => setLoading(false));\n  }, [url]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Messages | Holidaze\")), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, error), contacts.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"empty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"no messages\"), contacts.map(contact => {\n    const format = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    const newFormat = new Intl.DateTimeFormat(\"en-GB\", format);\n    const createdAt = new Date(contact.createdAt);\n    const newCreatedAt = newFormat.format(createdAt);\n    return /*#__PURE__*/React.createElement(NavLink, {\n      to: `viewmessage/${contact.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: contact.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, contact.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, contact.message), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, newCreatedAt)));\n  }));\n}\n\nexport default Messages;","map":{"version":3,"sources":["/Users/fredrikeriksen/Documents/FEU/PE2/my-project/src/components/admin/Messages.js"],"names":["React","useState","useEffect","NavLink","BASE_URL","headers","Helmet","Spinner","Messages","loading","setLoading","contacts","setContacts","error","setError","url","options","fetch","then","response","json","console","dir","message","catch","debug","finally","length","map","contact","format","year","month","day","newFormat","Intl","DateTimeFormat","createdAt","Date","newCreatedAt","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { BASE_URL, headers } from \"../../constants/api\";\nimport { Helmet } from \"react-helmet\";\nimport Spinner from \"../spinner/Spinner\";\n\nfunction Messages() {\n  const [loading, setLoading] = useState(true);\n  const [contacts, setContacts] = useState(null);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + \"contacts/\";\n\n  useEffect(() => {\n    const options = { headers };\n    fetch(url, options)\n      .then((response) => response.json())\n      .then((json) => {\n        console.dir(json);\n        if (json.error) {\n          setContacts([]);\n          setError(json.message);\n        } else {\n          setContacts(json);\n        }\n      })\n      .catch((error) => console.debug(error))\n      .finally(() => setLoading(false));\n  }, [url]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  return (\n    <div className=\"messages\">\n      <Helmet>\n        <title>Messages | Holidaze</title>\n      </Helmet>\n      {error && <div className=\"error\">{error}</div>}\n      {contacts.length === 0 && <p className=\"empty\">no messages</p>}\n      {contacts.map((contact) => {\n        const format = { year: \"numeric\", month: \"short\", day: \"numeric\" };\n        const newFormat = new Intl.DateTimeFormat(\"en-GB\", format);\n        const createdAt = new Date(contact.createdAt);\n        const newCreatedAt = newFormat.format(createdAt);\n        return (\n          <NavLink to={`viewmessage/${contact.id}`}>\n            <div key={contact.id}>\n              <h5>{contact.name}</h5>\n              <p>{contact.message}</p>\n              <p>{newCreatedAt}</p>\n            </div>\n          </NavLink>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}